diff --git a/dist/index.d.ts b/dist/index.d.ts
index 8dca1a4db064711d14f47947ae76e3952dfee395..15684e3b46394b8568c3dddb32b4a5798f1feb37 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -43,12 +43,12 @@ declare type InferSpyEvent<HT extends Record<string, any>> = {
         context: Record<string, any>;
     };
 }[keyof HT];
-declare class Hookable<HooksT = Record<string, HookCallback>, HookNameT extends HookKeys<HooksT> = HookKeys<HooksT>> {
+declare class Hookable<HooksT extends Record<string, any> = Record<string, HookCallback>, HookNameT extends HookKeys<HooksT> = HookKeys<HooksT>> {
     private _hooks;
-    private _before;
-    private _after;
+    private _before?;
+    private _after?;
     private _deprecatedHooks;
-    private _deprecatedMessages;
+    private _deprecatedMessages?;
     constructor();
     hook<NameT extends HookNameT>(name: NameT, function_: InferCallback<HooksT, NameT>, options?: {
         allowDeprecated?: boolean;
@@ -65,13 +65,13 @@ declare class Hookable<HooksT = Record<string, HookCallback>, HookNameT extends
     beforeEach(function_: (event: InferSpyEvent<HooksT>) => void): () => void;
     afterEach(function_: (event: InferSpyEvent<HooksT>) => void): () => void;
 }
-declare function createHooks<T>(): Hookable<T>;
+declare function createHooks<T extends Record<string, any>>(): Hookable<T>;
 
 declare function flatHooks<T>(configHooks: NestedHooks<T>, hooks?: T, parentName?: string): T;
 declare function mergeHooks<T>(...hooks: NestedHooks<T>[]): T;
-declare function serial<T>(tasks: T[], function_: (task: T) => Promise<any> | any): Promise<any>;
-declare function serialCaller(hooks: HookCallback[], arguments_?: any[]): Promise<any>;
-declare function parallelCaller(hooks: HookCallback[], arguments_?: any[]): Promise<any[]>;
+declare function serial<T>(tasks: T[], function_: (task: T) => Promise<any> | any): Promise<void>;
+declare function serialCaller(hooks: HookCallback[], arguments_?: any[]): Promise<void>;
+declare function parallelCaller(hooks: HookCallback[], arguments_?: any[]): Promise<void[]>;
 
 interface CreateDebuggerOptions {
     /** An optional tag to prefix console logs with */